1. Describe an analogy for relating an algorithm that has efficiency O(1) and another algorithm that has O(2n).
  - Corvette:Spark::O(1):O(2n)

2. In plain English, what is the best case scenario for binary search?
  - The first index is the target

3. In plain English, what is the worst-case scenario for binary search?
  - With each iteration, you eliminate half of the possibilities, so it's log n.

4. In plain English, what is the bounded-case scenario for binary search?
  - It would be the average of the worst case scenario and best case scenario, which would still work out to the same thing as the worst scenario since best case is 1.

5. Create a graph using the data below. Here's a CSV with the values you'll need.
  - https://docs.google.com/spreadsheets/d/1ucZXjjOS8DTQwA1DE5Ibpu4GTObEs5M9PvYPENIrekw/edit?usp=sharing

6. What's the asymptotic limit as n approaches infinity for the function defined by the values above?
  - The limit does not exist

7. What is the Big-O of an algorithm that has the data points above?
  - f(2^n)

8. Write a Ruby script that calculates and prints the N number, given an iteration, for linear search in the worst case (similar to the graph above).
  for n in (0..(collection.length - 1)); puts "#{n},#{n}\n"; end

9. Create a graph from the output using Google Sheets or other graphing software. Analyze the graph and denote its Big-O somewhere on the graph.
  - https://docs.google.com/spreadsheets/d/1ucZXjjOS8DTQwA1DE5Ibpu4GTObEs5M9PvYPENIrekw/edit?usp=sharing

10. What is the Big-O of binary search?
  - O(log n)

11. What is the Big-Ω of binary search?
  - O(1)

12. What is the Big-Ө of binary search?
  - O(log n)
